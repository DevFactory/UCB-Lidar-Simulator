/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package atmosphere.gui;

import atmosphere.Mie;
import atmosphere.Pressure;
import atmosphere.Rayleigh;
import atmosphere.Temperature;
import atmosphere.functions.plotter.FunctionPlotter;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.Collection;
import javax.swing.JLabel;

/**
 *
 * @author Oscar
 */
public class GraphicsVisualizer extends javax.swing.JFrame {

    /**
     * Creates new form GraphicsVisualizer
     */
    public GraphicsVisualizer() {
        initComponents();
        makeFrameFullSize();
    }
    
    public GraphicsVisualizer(Collection<Number> data, ArrayList<Color> colors) {
        this.functionPlotter = new FunctionPlotter();
        
        initComponents();
        makeFrameFullSize();
        Color colorA, colorB;
        colorA = colors.get(0);
        createMieTabs(data, colorA);
        colorA = colors.get(1);
        createPressureTabs(data, colorA);
        colorA = colors.get(2);
        createTemperatureTabs(data, colorA);
        colorA = colors.get(3);
        colorB = colors.get(4);
        createRayleighTabs(data, colorA, colorB);
        this.setVisible(true);
        

    }
    
    private void createTemperatureTabs(Collection<Number> data, Color color) {
        Temperature temperature = new Temperature(data);
        temperature.generate();

        this.functionPlotter = new FunctionPlotter((temperature.generateChart()));
        this.temperaturePanel = this.functionPlotter.getChartPanel();
        graphicsTabbedPane.setComponentAt(0, this.temperaturePanel);
    }

    private void createPressureTabs(Collection<Number> data, Color color) {
        Pressure pressure = new Pressure(data);
        pressure.generate();
        this.functionPlotter.setChart(pressure.generateChart());
        this.pressurePanel = this.functionPlotter.getChartPanel();
    }

    private void createMieTabs(Collection<Number> data, Color color) {
        Mie mie = new Mie();
        mie.generate();
        this.functionPlotter.setChart(mie.generateChart());
        this.miePanel = this.functionPlotter.getChartPanel();
    }

    private void createRayleighTabs(Collection<Number> data, Color colorA, Color colorB) {
        Rayleigh rayleigh = new Rayleigh(data);
        rayleigh.generate();
        this.functionPlotter.setChart(rayleigh.getAlfaScatteringChart());
        this.alphaRayleighPanel = this.functionPlotter.getChartPanel();
        this.functionPlotter.setChart(rayleigh.getBetaScatteringChart());
        this.betaRayleighPanel = this.functionPlotter.getChartPanel();

    }

    private void makeFrameFullSize() {
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        this.setSize(screenSize.width, screenSize.height);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonPanel = new javax.swing.JPanel();
        backButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        graphicsTabbedPane = new javax.swing.JTabbedPane();
        temperaturePanel = new javax.swing.JPanel();
        pressurePanel = new javax.swing.JPanel();
        miePanel = new javax.swing.JPanel();
        alphaRayleighPanel = new javax.swing.JPanel();
        betaRayleighPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Graphics Visualizer");

        backButton.setText("Back");
        backButton.setToolTipText("Back to graphics configuration window");
        backButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonPanel.add(backButton);

        getContentPane().add(buttonPanel, java.awt.BorderLayout.PAGE_END);

        jPanel2.setLayout(new java.awt.BorderLayout());

        graphicsTabbedPane.addTab("Temperature", null, temperaturePanel, "View temperature graphic");
        graphicsTabbedPane.addTab("Pressure", null, pressurePanel, "View pressure graphic");
        graphicsTabbedPane.addTab("Mie", null, miePanel, "View mie graphic");
        graphicsTabbedPane.addTab("Alpha Rayleigh", null, alphaRayleighPanel, "View alpha rayleigh graphic");
        graphicsTabbedPane.addTab("Beta Rayleigh", null, betaRayleighPanel, "View beta rayleigh graphic");

        jPanel2.add(graphicsTabbedPane, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GraphicsVisualizer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GraphicsVisualizer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GraphicsVisualizer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GraphicsVisualizer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GraphicsVisualizer().setVisible(true);
            }
        });
    }

    private FunctionPlotter functionPlotter = new FunctionPlotter();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel alphaRayleighPanel;
    private javax.swing.JButton backButton;
    private javax.swing.JPanel betaRayleighPanel;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JTabbedPane graphicsTabbedPane;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel miePanel;
    private javax.swing.JPanel pressurePanel;
    private javax.swing.JPanel temperaturePanel;
    // End of variables declaration//GEN-END:variables
}
